{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api/api.ts","components/Loader/Loader.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_DATA_URL","API_KEY","getData","title","a","fetch","response","json","Loader","FindMovie","addMovie","listMovies","useState","inputValue","setInputValue","setMovie","isErrorVisible","changeErrorVisibility","isLoading","setIsloading","movieInListError","setMovieInListError","isMovieNotInList","movieForCompare","some","listMovie","trim","toLowerCase","movieFromServer","console","log","setTimeout","htmlFor","type","id","placeholder","cn","value","onChange","event","target","onClick","disabled","App","setMovies","newMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8334341a.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <>\n      {movie && (\n        <div className=\"card\">\n          <div className=\"card-image\">\n            <figure className=\"image is-4by3\">\n              <img\n                src={movie.Poster}\n                alt=\"Film logo\"\n              />\n            </figure>\n          </div>\n          <div className=\"card-content\">\n            <div className=\"media\">\n              <div className=\"media-left\">\n                <figure className=\"image is-48x48\">\n                  <img\n                    src=\"images/imdb-logo.jpeg\"\n                    alt=\"imdb\"\n                  />\n                </figure>\n              </div>\n              <div className=\"media-content\">\n                <p className=\"title is-8\">{movie.Title}</p>\n              </div>\n            </div>\n\n            <div className=\"content\">\n              {movie.Plot}\n              <br />\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_DATA_URL = 'http://www.omdbapi.com';\nconst API_KEY = '26d463cc';\n\nexport async function getData(title: string): Promise<Movie> {\n  const response = await fetch(`${API_DATA_URL}/?apikey=${API_KEY}&t=${title}`);\n\n  return response.json();\n}\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"lds-spinner\">\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport cn from 'classnames';\nimport { getData } from '../../api';\nimport { MovieCard } from '../MovieCard';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  listMovies: Movie[],\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie, listMovies }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [isErrorVisible, changeErrorVisibility] = useState(false);\n  const [isLoading, setIsloading] = useState(false);\n  const [movieInListError, setMovieInListError] = useState(false);\n\n  function isMovieNotInList(movieForCompare: Movie) {\n    return !listMovies\n      .some(listMovie => listMovie.imdbID === movieForCompare.imdbID);\n  }\n\n  function changeInput(event: React.ChangeEvent<HTMLInputElement>) {\n    setInputValue(event.target.value);\n    changeErrorVisibility(false);\n  }\n\n  async function getMovieFromServer() {\n    setIsloading(true);\n\n    try {\n      const movieFromServer = await getData(inputValue.trim().toLowerCase());\n\n      if (movieFromServer.Title) {\n        setMovie(movieFromServer);\n\n        // eslint-disable-next-line no-console\n        console.log(movieFromServer.Title);\n\n        if (isMovieNotInList(movieFromServer)) {\n          setMovieInListError(false);\n        }\n      } else {\n        changeErrorVisibility(true);\n      }\n    } finally {\n      setTimeout(() => {\n        setIsloading(false);\n      }, 500);\n    }\n  }\n\n  function throwMovie() {\n    if (movie) {\n      setInputValue('');\n\n      if (isMovieNotInList(movie)) {\n        addMovie(movie);\n      } else {\n        setMovieInListError(true);\n      }\n    }\n  }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n            <div className=\"control\">\n              <input\n                type=\"text\"\n                id=\"movie-title\"\n                placeholder=\"Enter a title to search\"\n                className={cn(\n                  'input',\n                  { 'is-danger': isErrorVisible },\n                )}\n                value={inputValue}\n                onChange={changeInput}\n              />\n            </div>\n          </label>\n\n          {(isErrorVisible || movieInListError) && (\n            <p className=\"help is-danger\">\n              {movieInListError\n                ? 'The movie is already on the list'\n                : 'Can\\'t find a movie with such a title'}\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getMovieFromServer}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={throwMovie}\n              disabled={movieInListError}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {isLoading\n        ? (\n          <div className=\"loader__container\">\n            <Loader />\n          </div>\n        )\n        : (\n          <div className=\"container\">\n            <h2 className=\"title\">Preview</h2>\n            <MovieCard movie={movie} />\n          </div>\n        )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    setMovies([...movies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} listMovies={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}